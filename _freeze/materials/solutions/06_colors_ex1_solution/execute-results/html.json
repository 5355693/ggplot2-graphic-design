{
  "hash": "ee47a2e53fb7f33cf4a292261b3e7004",
  "result": {
    "markdown": "---\ntitle: \"Graphic Design with ggplot2\"\nsubtitle: \"<span style='font-size:1.75em;line-height:1.1;'>Working with Colors:<br><span style='font-weight:500;'>Solution Exercise 1</span></span>\"\nauthor: \"<b style='color:#28a87d;'>Cédric Scherer</b> **//** rstudio::conf **//** July 2022\"\nformat:\n  revealjs:\n    theme: css/style.scss\n    footer: '**[Cédric Scherer](https::/cedricscherer.com) //** rstudio::conf **//** July 2022'\n    #'rstudio::conf(workshop = \"Graphic Design with ggplot2\", instructor = \"Cédric Scherer\")'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 1\n    dpi: 300\nexecute:\n  freeze: auto\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n## Exercise\n\n::: question\n-   **Create a similar visualization as close as possible:**\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/exercise-jittered-errorbars-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Import the Data Set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  \"https://raw.githubusercontent.com/z3tt/graphic-design-ggplot2/main/data/london-bikes-custom.csv\",\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n```\n:::\n\n\n## Create Sina Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9|7\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  ggforce::geom_sina(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  theme_minimal(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk\"\n  )\n```\n:::\n\n\n## Create Sina Plot\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/colors-exercise-ex-1-1-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Add Errorbars\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"10,11,12,13,14|6,11|7,12\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  ggforce::geom_sina(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  stat_summary(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    size = .8\n  ) +\n  theme_minimal(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk\"\n  )\n```\n:::\n\n\n## Add Errorbars\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/colors-exercise-ex-1-2-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Use Lighter Point Colors\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8,9\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  ggforce::geom_sina(\n    aes(color = stage(\n      day_night,\n      after_scale = lighten(color, .6)\n    )),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  stat_summary(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    size = .8\n  ) +\n  theme_minimal(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk\"\n  )\n```\n:::\n\n\n## Use Lighter Point Colors\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/colors-exercise-ex-1-3-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Use Standard Deviation\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"15,16,17\"}\np1 <- ggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  ggforce::geom_sina(\n    aes(color = stage(\n      day_night,\n      after_scale = lighten(color, .6)\n    )),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  stat_summary(\n    aes(color = day_night),\n    fun = mean,\n    fun.max = function(y) mean(y) + sd(y),\n    fun.min = function(y) mean(y) - sd(y),\n    position = position_dodge(width = .6),\n    size = .8\n  ) +\n  theme_minimal(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk\"\n  )\n\np1\n```\n:::\n\n\n## Add Annotations\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/colors-exercise-ex-1-4-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Add Annotations\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5,6,7,8,9,10,11,12,13|3|6,7,8|10\"}\np2 <- p1 +\n  stat_summary(\n    geom = \"text\",\n    aes(\n      color = day_night,\n      label = paste0(\n        sprintf(\"%2.1f\", stat(y) / 1000), \"K\"\n      )\n    ),\n    position = position_dodge(width = .6),\n    hjust = -.2, family = \"Tabular\",\n    size = 5.5, fontface = \"bold\"\n  )\n\np2\n```\n:::\n\n\n## Add Annotations\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/colors-exercise-ex-1-5-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Adjust Axes + Clipping\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2|3,4,5|6,7,8,9,10\"}\np3 <- p2 +\n  coord_cartesian(clip = \"off\") +\n  scale_x_discrete(\n    labels = str_to_title\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(),\n    expand = c(0, 0),\n    limits = c(0, NA)\n  )\n\np3\n```\n:::\n\n\n## Adjust Axes + Clipping\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/colors-exercise-ex-1-6-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Add Colors + Labels\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|4,5,6|7,8,9,10,11\"}\ncolors <- c(\"#987708\", \"#663399\")\n\np4 <- p3  +\n  scale_color_manual(\n    values = colors\n  ) +\n  labs(\n    x = NULL, y = NULL,\n    title = paste0(\"Reported bike shares in London during <span style='color:\", colors[1], \";'>day</span> and <span style='color:\", colors[2], \";'>night</span> times\"),\n    subtitle = \"TfL bike sharing data from 2015 to 2016 per season and time of day.\\nErrorbars show the mean ± standard deviation.\"\n  )\n\np4\n```\n:::\n\n\n## Add Colors + Labels\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/colors-exercise-ex-1-7-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Theme Styling\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2|3,4|5,6,7|8,9|10|11\"}\np4 +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\",\n    plot.title = ggtext::element_markdown(face = \"bold\", size = 26),\n    plot.subtitle = element_text(color = \"grey30\", margin = margin(t = 6, b = 12)),\n    axis.text.x = element_text(size = 17, face = \"bold\"),\n    axis.text.y = element_text(family = \"Tabular\"),\n    axis.line.x = element_line(size = 1.2, color = \"grey65\"),\n    plot.margin = margin(rep(15, 4))\n  )\n```\n:::\n\n\n## Theme Styling\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_colors_ex1_solution_files/figure-revealjs/colors-exercise-ex-1-8-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Full Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(colorspace)\nlibrary(ggtext)\n\nbikes <- readr::read_csv(\n  \"https://raw.githubusercontent.com/z3tt/graphic-design-ggplot2/main/data/london-bikes-custom.csv\",\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ncolors <- c(\"#987708\", \"#663399\")\n\nggplot(bikes, aes(x = season, y = count)) +\n  ggforce::geom_sina(\n    aes(\n      color = stage(\n        day_night, after_scale = lighten(color, .6)\n    )),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  stat_summary(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    fun = mean,\n    fun.max = function(y) mean(y) + sd(y),\n    fun.min = function(y) mean(y) - sd(y),\n    size = .8\n  ) +\n  stat_summary(\n    geom = \"text\",\n    aes(\n      color = day_night,\n      label = paste0(sprintf(\"%2.1f\", stat(y) / 1000), \"K\")\n    ),\n    position = position_dodge(width = .6),\n    hjust = -.2, size = 5.5, family = \"Tabular\", fontface = \"bold\"\n  ) +\n  coord_cartesian(clip = \"off\") +\n  scale_x_discrete(\n    labels = str_to_title\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(),\n    expand = c(0, 0),\n    limits = c(0, NA)\n  ) +\n  scale_color_manual(values = colors) +\n  labs(\n    x = NULL, y = NULL,\n    title = paste0(\"Reported bike shares in London during <span style='color:\", colors[1], \";'>day</span> and <span style='color:\", colors[2], \";'>night</span> times\"),\n    subtitle = \"TfL bike sharing data from 2015 to 2016 per season and time of day.\\nErrorbars show the mean ± standard deviation.\"\n  ) +\n  theme_minimal(base_size = 18, base_family = \"Cabinet Grotesk\") +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(face = \"bold\", size = 26),\n    plot.subtitle = element_text(color = \"grey30\", margin = margin(t = 6, b = 12)),\n    axis.text.x = element_text(size = 17, face = \"bold\"),\n    axis.text.y = element_text(family = \"Tabular\"),\n    axis.line.x = element_line(size = 1.2, color = \"grey65\"),\n    plot.margin = margin(rep(15, 4))\n  )\n```\n:::\n",
    "supporting": [
      "06_colors_ex1_solution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}