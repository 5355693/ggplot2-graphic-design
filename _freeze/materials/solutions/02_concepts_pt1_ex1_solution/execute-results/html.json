{
  "hash": "1911ee22d4062d2a0c7ce55f1dfd2f29",
  "result": {
    "markdown": "---\ntitle: \"Graphic Design with ggplot2\"\nsubtitle: \"<span style='font-size:1.75em;line-height:1.1;'>Concepts of the <code>{ggplot2}</code> Package Pt. 1:<br><span style='font-weight:500;'>Solution Exercise 1</span></span>\"\nauthor: \"<b style='color:#28a87d;'>Cédric Scherer</b> **//** rstudio::conf **//** July 2022\"\nformat:\n  revealjs:\n    theme: css/style.scss\n    footer: '**[Cédric Scherer](https::/cedricscherer.com) //** rstudio::conf **//** July 2022'\n    #'rstudio::conf(workshop = \"Graphic Design with ggplot2\", instructor = \"Cédric Scherer\")'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 1\n    dpi: 300\nexecute:\n  freeze: auto\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n## Exercise 1\n\n::: question\n-   Explore the TfL bike share data visually:<br>**create a timeseries of reported bike shares on weekend days**\n    -   Highlight day and night encoded by colors and shapes.\n    -   Connect the points of each period with lines.\n        -   What is the difference between `geom_line()` and `geom_path()`?\n    -   Apply your favorite theme to the plot.\n    -   Add meaningful labels.\n    -   [Bonus: use shape to encode Saturday vs Sunday instead.]{style=\"color:#5DB699;\"}\n-   Save the plot as a vector graphic with a decent plot size.\n:::\n\n## Import the Data Set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\nlibrary(tidyverse)\n```\n:::\n\n\n## Scatterplot Counts vs. Date\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-1-1.png){width=1500}\n:::\n:::\n\n\n## Encode Day Period by Colors and Shapes\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6,7\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-2-1.png){width=1500}\n:::\n:::\n\n\n## Add Line\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  ) +\n  geom_line(\n    color = \"grey\"\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-3-1.png){width=1500}\n:::\n:::\n\n\n## Group Lines by Day Period\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-4-1.png){width=1500}\n:::\n:::\n\n\n## Order Layers\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-5-1.png){width=1500}\n:::\n:::\n\n\n## Use \\`geom_path()\\` instead\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_path(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-6-1.png){width=1500}\n:::\n:::\n\n\n## \\`geom_line()\\` vs. \\`geom_path()\\`\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3|5,6,7\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_path(\n    aes(color = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-comp-path-1.png){width=1500}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_line(\n    aes(color = day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-comp-line-1.png){width=1500}\n:::\n:::\n\n:::\n:::\n\n## Apply a Theme\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1|1,14|14,15,16,17,18,19,20,21|15,16,17,18|19,20,21\"}\ng <- ggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n\ng +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-8-1.png){width=1500}\n:::\n:::\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5,6,7\"}\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = \"Part of the Day:\"\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-9-1.png){width=1500}\n:::\n:::\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = \"Part of the Day:\",\n    shape = \"Part of the Day:\"\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-10-1.png){width=1500}\n:::\n:::\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5,6\"}\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-11-1.png){width=1500}\n:::\n:::\n\n\n## Save the Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2|1|2\"}\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex1.pdf\"),\n       width = 9, height = 5, device = cairo_pdf)\n```\n:::\n\n\n\n\n![](plots/02_concepts_pt1_ex1.png){fig-align=\"center\" fig-alt=\"The final plot with an aspect ratio of 9 x 5 inches while using a base_size of 15.\"}\n\n::: footer\n:::\n\n## Bonus: Use Shape to Encode Sat vs Sun\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::day(date) == 6)\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-bonus-1.png){width=1500}\n:::\n:::\n\n\n## Bonus: Use Shape to Encode Sat vs Sun\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::wday(date, label = TRUE))\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-bonus-1-1.png){width=1500}\n:::\n:::\n\n\n## Bonus: Use Shape to Encode Sat vs Sun\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ninvisible(\n  Sys.setlocale(\"LC_TIME\", \"C\")\n)\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::wday(date, label = TRUE))\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex1_solution_files/figure-revealjs/concepts-pt1-exercise-1-bonus-2-1.png){width=1500}\n:::\n:::\n\n\n## Save the Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1,2|1|2\"}\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex1_bonus.pdf\"),\n       width = 9, height = 5, device = cairo_pdf)\n```\n:::\n\n\n\n\n![](plots/02_concepts_pt1_ex1_bonus.png){fig-align=\"center\" fig-alt=\"The final plot with the bonus encoding saved with an aspect ratio of 9 x 5 inches.\"}\n\n::: footer\n:::\n",
    "supporting": [
      "02_concepts_pt1_ex1_solution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}